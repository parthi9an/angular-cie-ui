/**
 * Tool Error Event Controller
 */

function ToolErrorEventCtrl(conf, apiUrl, apiService, $rootScope, $scope,
		$http, $localStorage, $modal, $compile) {

	var _this = this;

	this.exceptionPatternData = [];

	this.init = function() {

		var args = ($localStorage.searchFilterArgs != undefined) ? $localStorage.searchFilterArgs
				: {};
		_this.getExceptionCount(args);
		
	}

	/*
	 * Search filter (in progress)
	 */
	$rootScope.$on('populateSearchResults', function(event, args) {

		$localStorage.searchFilterArgs = args;
		_this.getExceptionCount(args);
		
	});

	/*
	 * Get common patterns and actions leading up to the exception
	 */

	this.getFrequentExceptionPattern = function(index, exception) {
		var args = [];
		args['errorTracechecksum'] = exception.checksum;
		apiService.getWithParams(apiUrl.GET_FREQUENT_EXCEPTION_PATTERN, args,
				function(data, status) {

					for (var i = 0; i < data.length; i++) {
						data[i].eIds = data[i].pattern.replace(/#/g, '').split(
								'_');
						data[i].eNames = data[i].pattern_class.split('_');
					}

					$("#excep" + index).find('.excepElements').toggle();
					if ($("#excep" + index).find('.excepElements').is(
							":visible")) {
						_this.exceptionPatternData[index] = data;
						
					}
				});
		return false;
	}

	/*
	 * Get common exception patterns along with: Counts on how frequently they
	 * occur
	 */

	this.getExceptionCount = function(args) {
		apiService.getWithParams(apiUrl.GET_EXCEPTION_COUNT, args, function(
				data, status) {
			for (var i = 0; i < data.length; i++) {
				data[i].sTrace = [];
				if(data[i].trace.match('\\[') != null){
					data[i].sTrace = angular.fromJson(data[i].trace);
				} else {
					data[i].sTrace.push(data[i].trace);  
				}
			}
			$scope.exceptionData = data;

		});

	}

	this.init();

}

/**
 * 
 * Pass all functions into module
 */

angular.module('cie').controller('ToolErrorEventCtrl', ToolErrorEventCtrl);